@import url("https://fonts.googleapis.com/css2?family=Fugaz+One&family=Nunito&display=swap");

/* || RESET */

/* ******************************* LEARNINGS ******************************* */
/* * represents true elements (not pseudo elements).
    true elements are the ones which are part of DOM.
    Second, the box-sizing property cannot be inherited
    so even if the pseudo elements are child of some true
    element which for sure must have inherited the box-sizing
    property through the *, wont be able to pass it down to its
    children */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* border: 1px solid red; */
}

img {
    display: block;
    width: 100%;
    height: auto;
}

input,
textarea,
button {
    font: inherit;
}

/* || VARIABLES */

:root {
    /* FONTS */
    --FF: "Nunito", sans-serif;
    --FF-HEADINGS: "Fugaz One", cursive;
    --FS: clamp(1rem, 2.2vh, 1.5rem);

    /* COLORS */
    --FONT-COLOR: #000;
    --LINK-COLOR: #000;
    --LINK-HOVER: hsla(0, 0%, 0%, 0.442);
    --LINK-ACTIVE: orange;
    --HEADER-BGCOLOR: #000;
    --HEADER-COLOR: #fff;
    --NAV-BGCOLOR: #fff;
    --HERO-COLOR: #fff;
    --HERO-BGCOLOR: rgba(51, 178, 51, 0.75);
    --HIGHLIGHT-COLOR: rgb(51, 178, 51);
    --BORDER-COLOR: #000;
    --BUTTON-COLOR: #fff;

    /* STANDARD PADDING */
    --PADDING-TB: 0.25em;
    --PADDING-SIDE: 2.5%;
    --PADDING: var(--PADDING-TB) var(--PADDING-SIDE);

    /* BORDERS */
    --BORDERS: 1px solid var(--BORDER-COLOR);
    --BORDER-RADIUS: 15px;
}

/* UTILITY CLASSES */

.offscreen {
    position: absolute;
    left: -10000px;
}

.center {
    text-align: center;
}

/* || GENERAL STYLES */

html {
    scroll-behavior: smooth;
    font-size: var(--FS);
    font-family: var(--FF);
}

body {
    min-height:  100vh;
    max-width: 800px;
    margin: 0 auto;
    color: var(--FONT-COLOR);
    /* padding: 1rem; */
    border-left: var(--BORDERS);
    border-right: var(--BORDERS);
}

h1,
h2,
h3 {
    font-family: var(--FF-HEADINGS);
    letter-spacing: 0.1em;
}

h2,
h3 {
    color: var(--HIGHLIGHT-COLOR);
    margin-bottom: 1rem;
}

p {
    line-height: 1.5em;
 }

a:any-link {
    color: var(--LINK-COLOR);
}

a:hover, a:focus-visible {
    color: var(--LINK-HOVER);
}

a:active {
    color: var(--LINK-ACTIVE);
}

/* || HEADER */

.header {
    position: sticky;
    top: 0;
    z-index: 1;
}

.header__h1 {
    background-color: var(--HEADER-BGCOLOR);
    color: var(--HEADER-COLOR);
    text-align: center;
    padding: var(--PADDING);
}

.header__nav {
    background-color: var(--NAV-BGCOLOR);
    box-shadow: 0 1px 4px 0 var(--BORDER-COLOR);
    padding: var(--PADDING);
    font-weight: bold;
}

.header__ul {
    list-style-type: none;
    display: flex;
    justify-content: space-evenly;
}

/* || HERO */

.hero {
    position: relative;
}

.hero__h2 {
    position: absolute;
    top: 0;
    left: 20px;
    background-color: var(--HERO-BGCOLOR);
    color: var(--HERO-COLOR);
    /* text-shadow does not take spread radius */
    text-shadow: 0px 0px 9px var(--BORDERS);
    padding: var(--PADDING);
    animation: showWelcome 500ms linear forwards;
}

@keyframes showWelcome {
    0% {
        top: -20px;
        transform: skew(0deg, -5deg) scaleY(0);
    }
    
    80% {
        top: 30px;
        transform: skew(10deg, -5deg) scaleY(1.2);
    }

    100% {
        top: 20px;
        transform: skew(-10deg, -5deg) scaleY(1);
    }
    
}

/* LEARNINGS */
/* Animations are mostly CPU intensive so try to mention the
properties you would like to animate rather than using all as
that will lead to all properties being animated and that would
cause a lot of issues for low end devices */
/* Use milliseconds instead of seconds as Javascript only uses
milliseconds */
/* For transforms and opacity, GPU is used and for others, CPU
is used, so limit the ones that uses CPU as that will impact the
browser performance*/
/* Transitions are used to animate when an element moves from one
state to other */
/* From MDN - 
Transitions enable you to define the transition between two states 
of an element. Different states may be defined using pseudo-classes 
like :hover or :active or dynamically set using JavaScript. */

/*  || FOOTER */

.footer {
    position: sticky;
    bottom: 0;
    background-color: var(--HEADER-BGCOLOR);
    color: var(--HEADER-COLOR);
    padding: var(--PADDING);
    font-size: --FS;
    font-family: var(--FF);
    text-align: center;
}

/* || MAIN */

.main {
    padding: 1.2rem var(--PADDING-SIDE);
    margin-bottom: 0.5rem;
}

.main__article {
    /* ******************************* LEARNINGS ******************************* */
    scroll-margin-top: 6.5rem;
    margin-bottom: 1rem;
}

/* || ABOUT */

.about__trivia {
    margin-top: 1.5rem;
}

.about__trivia-answer {
    margin-top: 0.7rem;
}

/* || CONTACT */

.contact__fieldset {
    border: none;    
}

.contact__label {
    display: block;
    font-weight: bold;
    margin-bottom: 0.1em;
}

.contact__input,
.contact__textarea {
    width: 100%;
    padding: 0.7em var(--PADDING-SIDE);
    border-radius: var(--BORDER-RADIUS);
}

.contact__p {
    margin-bottom: 1em;
}

.contact__button {
    padding: var(--PADDING-TB) var(--PADDING-SIDE);
    background-color: var(--HIGHLIGHT-COLOR);
    border-radius: var(--BORDER-RADIUS);
    font-weight: bold;
    color: var(--BUTTON-COLOR);
}

/* || MENU */

tr,
tbody,
thead,
tfoot {
    display: contents;
}

.menu__container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas:
        "hd1 hd2 hd3"
        "cr cr1 cr1p"
        "cr cr2 cr2p"
        "cr cr3 cr3p"
        "sf sf1 sf1p"
        "sf sf2 sf2p"
        "sf sf3 sf3p"
        "cs cs cs"
    ;

    /* ******************************* LEARNINGS ******************************* */
    /* font-size: clamp(5rem, 4vw, 500rem); */
    gap: 0.1em;
}

.menu__cr {
    grid-area: cr;
}

.menu__sf {
    grid-area: sf;
}

.menu__cs {
    grid-area: cs;
}

/* ******************************* LEARNINGS ******************************* */
/* .menu__item:last-child {
    color:red;
} */


.menu__cr,
.menu__sf,
.menu__cs,
.menu__header {
    display: grid;
    place-content: center;
    color: var(--HIGHLIGHT-COLOR);
    font-weight: bold;
    height: 100%;
}

.menu__header,
.menu__item {
    border: 2px solid --BORDER-COLOR;
    padding: 1rem;
}

.menu__item {
    display: grid;
    place-content: center;
}

.menu__header:first-child {
    border-top-left-radius: var(--BORDER-RADIUS);
}

.menu__header:last-child {
    border-top-right-radius: var(--BORDER-RADIUS);
}

.menu__cs {
    border-bottom-left-radius: var(--BORDER-RADIUS);
    border-bottom-right-radius: var(--BORDER-RADIUS);
}

@media screen and (min-width: 576px) {
    .header__h1::before {
        content: 'ðŸŒ® '
    }

    .header__h1::after {
        content: ' ðŸŒ®'
    }

    .menu__header,
    .menu__cr,
    .menu__sf,
    .menu__cs {
        font-size: 125%;
    }
}
